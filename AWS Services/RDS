# Ports
    PostgreSQL: 5432

    MySQL: 3306

    Oracle RDS: 1521

    MSSQL Server: 1433

    MariaDB: 3306 (same as MySQL)

    Aurora: 5432 (if PostgreSQL compatible) or 3306 (if MySQL compatible)

# RDS - Relational Database Services
    Postgres
    MYSQL
    MariaDB
    Oracle - NOT support IAM Database Authentication
    Microsoft SQL Server
    IBM DB2
    Aurora (Proprietary AWS)

# RDS is manage service
    Automated provisioning, OS patching
    Continuos backups and restore to specific timestamp
    Monitoring Dashboard
    Read Replicas for improved read performance
    Multi AZ (Disaster Recovery)
    Maintenance windows for upgrades
    Scaling capability (vertical and horizontal)
    Storage backup by EBS (gp2 or io l)

# RDS Storage Auto Scaling
    Increase storage on your RDS DB dynamically
    Have to set Maxium Storage Threshold
    Support all RDS database engine

# RDS Read Replicas for read scalability
    Up to 15 Read Replicas
    ASYNC replication
    AZ, Cross AZ, Cross Region
    Replicas can be promoted, to their own DB
    Applications must update the connection string to leverage read replicas

    Use cases:
        Only Read
        Used for SELECT (=read) only

# Read Replicas - Network Cost
    Read Replicas same region, it's free.
    Cross Region, there cost.

# Multi AZ (Disaster Recovery)
    SYNC replication
    One DNS name - automatic app failover to standby
    Increase availability
    Failover in case of loss AZ, loss of network, instance or storage failure

    "Read Replicas can be setup as Multi AZ for DR

# RDS Custom
    Managed Oracle and Microsoft SQL Server Database with OS and database customization
        install patches
        Configure settings
        Access EC2 instances using SSH or SSM Session Manager

        RDS: entire database and the OS manage by AWS
        Custom: full admin access to the underlying OS and the database

# Aurora
    Postgres and MYSQL are both supported as Aurora DB
    AWS cloud optimized and claims 5x performance improvement over MYSQL on RDS, over 3x the performance of Postgres on RDS
    Storage increments of 10GB up to 128 TB
    15 replicas, process is faster than MYSQL (10 ms replica lag)
    Failover istantaneous, HA native
    Cost more than 20% + - but is more efficient

# Aurora HA and Read Scaling
    6 copies of your data cross 3 AZ
    4 copies out of 6 needed for writes
    3 copies out of 6 needed for reads
    One master and multiple read replicas
    Failover for master in less than 30 seconds
    Support for Cross Region Replication

# Aurora DB Cluster
    Shared Storage Volume - 10G to 128TB

# Features Aurora
    Automatic failover
    Backup and Recovery
    Isolation and security
    Industry Compliance
    Push-button scaling
    Automated Patching with Zero Downtime
    Advanced Monitoring
    Routine Maintenance
    Backtrack - restore data at any point of time without using backups

# Aurora Serveless
    Automated database and auto scaling based on actual usage
    Good for infrequent, intermittent or unpredictable workloads
    No capacity planning needed
    Pay per second, can be most cost effetive

# Global Aurora
    Cros Region Read Replicas:
        Useful for DR (Disater Recovery)
        Simple to put in place
    
    Global Data Base:
        1 Primary Region (write/read)
        Up to 5 secondary, replication lag is less than 1 second
        Up to 16 Read Replicas per secondary
        Help for decreasing latency
        Promoting another region (DR) RTO of < 1 minute
        cross region replication less than 1 second

# Aurora Machine Learning
    Simple, optimized and secure integration between Aurora and AWS ML services
    Sage Maker (ML model)
    Comprehend (for sentiment analysis)
    Use cases: fraud detection, ads targeting, sentiment analysis, product recommendations

# Restore RDS and Aurora
    Restore MYSQL RDS database from S3
        Create backup of your on-promises database
        Store in on S3
        Restore backup file onto a new RDS instance running MYSQL

    Restore MYSQL Aurora cluster from S3
        Create backup of your on-promises database using Percona XtraBackup
        Store the backup file on S3
        Restore the backup file onto a new Aurora cluster running MYSQL

# Aurora Database Cloning
    Useful to create a "staging" database from a "production" database without impacting the production database

# RDS Proxy
    Full managed database proxy
    Allow apps to pool and share DB connetions
    Improving database efficency by reducing the stress on database resources (CPU, RAM) minimize open connections (and timeouts)
    Serveless, autoscaling, HA (multi AZ)
    Reduced RDS & Aurora failover time ny up 66%
    Support RDS (MySQL, PostgreeSQL, MariaDB, MS SQL Server) and Aurora (MySQL, Postgre)
    Must be accessed from VPC only
    ENforce IAM Authentication for DB, credentials AWS Secret Manager

# ElastiCache
    Can be managed for Redis or Memcached
    Cache are in-memory databases with really high performance, low latency
    Help reduce load off of databases for read intensive workloads
    ElastiCache involves heavy application code changes

    REDIS
        Cases used: Gaming leaderboards, sorted sets, it's racked in real time, then added in correct order.
        Multi AZ with Auto-Failover
        Read Replicas to scale reads and have HA
        Data Durability using AOF persistence
        Backup and restore features
        Supports Sets and Sorted Sets

    MEMCACHED
        Multi-node for partitioning of data
        No HA (replication)
        No persistent
        No backup and restore
        Multi-threaded architecture    


